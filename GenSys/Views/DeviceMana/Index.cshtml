@model GenSys.Models.device

@{
    ViewBag.Title = "设备管理";
    var test = ViewData["device"];
}
<h2>@ViewBag.Title</h2>
<h3>@ViewBag.Message</h3>
<hr />

<input id="hdData" type="hidden" value="@ViewData["device"]" />


@section Scripts {
    <link href="~/Scripts/bootstrap-table-1.15.5/bootstrap-table.min.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap-table-1.15.5/bootstrap-table.min.js"></script>
    <script src="~/Scripts/bootstrap-table-1.15.5/locale/bootstrap-table-zh-CN.min.js"></script>

    <script src="~/Scripts/jquery.editable-select/jquery.editable-select.min.js" type="text/javascript"></script>
    <link href="~/Scripts/jquery.editable-select/jquery.editable-select.min.css" rel="stylesheet" type="text/css" />

    <script>
        //$.get("/DeviceMana/GetSite", function (data, status) {
        //    //console.log(status);
        //    var htm = "<option value='' selected='selected' disabled='disabled'>请选择/输入站点</option>";
        //    for (var int = 0; int < data.length; int++) {
        //        htm += "<option value='" + data[int].name + "'>" + data[int].name + "</option>";
        //    }
        //    $('#site').html(htm);
        //    $('#site').editableSelect({
        //        effects: 'slide',
        //        //可选参数default、fade
        //        filter: false // 不过滤，否则选中后其它选项消失
        //    });
        //});

        //$('#site').editableSelect({
        //    effects: 'slide',
        //    //可选参数default、fade
        //    filter: false // 不过滤，否则选中后其它选项消失
        //});
        //$('#dev_type').editableSelect({
        //    effects: 'slide',
        //    filter: false
        //});
        //$('#dev_model').editableSelect({
        //    effects: 'slide',
        //    filter: false
        //});


        var $table = $('#deviceTable')
        var $button = $('#button')
        $button.click(function () {
            $table.bootstrapTable('refresh', { url: '/DeviceMana/GetData' })
            //location.reload()
        })

        //var devnamelist = ["genbox", "hik ipc", "声波盾"];
        //$.each(devnamelist, function (i, item) {
        //    $("#devname").append($("<option>").text(item));
        //});

        //$('#addModal').on('shown.bs.modal', function () {
        //    alert("完全显示了呢");
        //})
        //$('#addModal').on('hide.bs.modal', function () {
        //    alert("别走！");
        //})


        function editFormatter(value, row, index) {
            return [
                ' <a class="edit ml10" href="javascript:void(0)" title="Edit">',
                '<i class="glyphicon glyphicon-edit"></i>',
                '</a>',
                '<a data-toggle="modal" data-target="#editModal">删除</a>'
            ].join('');
        }
        function operateFormatter(value, row, index) {
            if (row.dev_type == "GenBox") {
                return [
                    ' <a class="edit ml10" href="javascript:void(0)" title="编辑及添加camera" onclick="edit_customer(this)">',
                    '<i class="glyphicon glyphicon-cog"></i>',
                    '</a>',
                    ' <a class="cam_remove ml10" href="javascript:void(0)" title="移除绑定的camera">',
                    '<i class="glyphicon glyphicon-trash"></i>',
                    '</a>',
                    ' <a class="remove ml10" href="javascript:void(0)" title="删除设备">',
                    '<i class="glyphicon glyphicon-remove"></i>',
                    '</a>'
                ].join('');

            }
            else {
                return [
                    ' <a class="edit ml10" href="javascript:void(0)" title="编辑" onclick="edit_customer(this)">',
                    '<i class="glyphicon glyphicon-edit"></i>',
                    '</a>',
                    ' <a class="remove ml10" href="javascript:void(0)" title="删除设备">',
                    '<i class="glyphicon glyphicon-remove"></i>',
                    '</a>'
                ].join('');

            }

        }
        window.operateEvents = {
            'click .like': function (e, value, row, index) {
                alert('You click like icon, row: ' + JSON.stringify(row));
                console.log(value, row, index);
            },
            'click .edit': function (e, value, row, index) {

                if (row.dev_type == "GenBox") {


                    $('#editGBModal').modal("show");

                    //console.log($(e.target))
                    //console.log($(e.currentTarget))
                    //var obj = $(e.target)
                    //while (!obj.is("table")) {
                    //    obj = obj.parent();
                    //}
                    //console.log(obj.attr("id"));

                    //console.log("-" + $(e.target).parents("table").attr("id"))
                    //console.log("--" + $(e.currentTarget).parents("table").attr("id"))

                }
                else {
                    $('#editModal').modal("show");

                }
                //alert('You click edit icon, row: ' + JSON.stringify(row));
                //console.log(value, row, index);
            },
            'click .cam_remove': function (e, value, row, index) {

                if (confirm("确定要移除GenBox对应的所有camera吗？")) {
                    toDelete_gb_cam(row.uuid);
                }
            },
            'click .remove': function (e, value, row, index) {
                //alert('You click remove icon, row: ' + JSON.stringify(row));
                //console.log(value, row, index);
                if (confirm("确定要删除吗？")) {
                    toDelete(row.uuid, row.dev_type);
                }
            }
        };

        function edit_customer(obj) { //负责模态框表格里的显示，实际上是在读取这一行的内容
            var $td = $(obj).parents('tr').children('td');
            var alias = $td.eq(0).text();
            var site = $td.eq(1).text();
            var dev_type = $td.eq(2).text();
            var dev_model = $td.eq(3).text();
            var uuid = $td.eq(4).text();
            var rtsp_url = $td.eq(5).text();
            var ip = $td.eq(6).text();
            var media_port = $td.eq(7).text();
            var account = $td.eq(8).text();
            var password = $td.eq(9).text();

            $("#alias2").val(alias);
            $("#site2").val(site);
            $("#dev_type2").val(dev_type);
            $("#dev_model2").val(dev_model);
            $("#uuid2").val(uuid);
            $("#rtsp_url2").val(rtsp_url);
            $("#ip2").val(ip);
            $("#media_port2").val(media_port);
            $("#account2").val(account);
            $("#password2").val(password);

            $("#alias3").val(alias);
            $("#site3").val(site);
            $("#uuid3").val(uuid);
            $("#dev_type3").val(dev_type);
            $("#dev_model3").val(dev_model);
            $("#ip3").val(ip);
            $("#account3").val(account);
            $("#password3").val(password);
        }

        function toDelete(id, type) {
            console.log(id);
            console.log("/DeviceMana/Delete/" + id + type);

            $.ajax({
                url: "/DeviceMana/Delete/",    //请求的url地址
                async: true,
                type: "POST",   //请求方式
                data: { id: id, type: type },
                success: function (req) {
                    alert("删除成功！");
                    location.reload();
                },
                error: function (req) {
                    ;
                    alert("删除失败！");
                }
            });
        }

        function toDelete_gb_cam(id) {
            console.log(id);
            console.log("/DeviceMana/Delete_tbcpu/" + id);

            $.ajax({
                url: "/DeviceMana/Delete_tbcpu/" + id,
                async: true,
                type: "POST",   //请求方式
                success: function (req) {
                    alert("移除成功！");
                    location.reload();
                },
                error: function (req) {
                    ;
                    alert("移除失败！");
                }
            });
        }

        function getdetail(index, row) {   //genbox的行，点击之后要显示出来对应的cpu配置
            if (row.dev_type == "GenBox") {
                var item = "";
                //console.log(row.uuid);
                $.ajax({
                    url: "/DeviceMana/GenboxDetail",
                    async: false,
                    data: { id: row.uuid },

                    type: "POST",
                    success: function (req) {
                        //var req = [{ "a": 'n1', "b": 18 }, { "a": 'n2', "b": 20 }, { "a": 'n3', "b": 22 }];
                        //console.log(req);
                        //console.log(req[0]);

                        $.each(JSON.parse(req), function (index, obj) {
                            //alert(obj.a + " " + obj.b + " " + obj.c);
                            item += "<label>【ipcam_uuid:" + obj.a + " 算法名称:" + obj.b + " cpu编号:" + obj.c + "】</label>";
                            //alert(item);
                        });

                    },
                    error: function (req) {
                        alert("失败");
                    }
                });
                //alert(item);
                console.log(item);
                return item;
            }
        }

    </script>
}


@*<form class="form-inline" role="form" action="/DeviceMana/AddDevice" method="post" onsubmit=""></form>*@
@*@using (Html.BeginForm("AddDevice", "DeviceMana"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-inline">
            <div class="form-group">
                @Html.EditorFor(model => model.alias, new { htmlAttributes = new { @class = "form-control", @id = "alias", placeholder = "别名" } })
                @Html.ValidationMessageFor(model => model.alias, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.DropDownListFor(model => model.site, ViewData["siteList"] as IEnumerable<SelectListItem>, new { @class = "form-control select", @id = "site" })
                @Html.ValidationMessageFor(model => model.site, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <input type="text" name="city" list="cityname" placeholder="城市" class="form-control" >
                <datalist id="cityname">
                    <option value="Boston">
                    <option value="Cambridge">
                </datalist>
            </div>

            <div class="form-group">
                @Html.DropDownListFor(model => model.dev_type, ViewData["dev_typeList"] as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "dev_type" })
                @Html.ValidationMessageFor(model => model.dev_type, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.DropDownListFor(model => model.dev_model, ViewData["dev_modelList"] as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "dev_model" })
                @Html.ValidationMessageFor(model => model.dev_model, "", new { @class = "text-danger" })
            </div>

            <br /><br />

            <div class="form-group">
                @Html.EditorFor(model => model.uuid, new { htmlAttributes = new { @class = "form-control", @id = "uuid", placeholder = "识别编号" } })
                @Html.ValidationMessageFor(model => model.uuid, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.rtsp_url, new { htmlAttributes = new { @class = "form-control", @id = "rtsp_url", placeholder = "视频流地址" } })
                @Html.ValidationMessageFor(model => model.rtsp_url, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.ip, new { htmlAttributes = new { @class = "form-control", @id = "ip", placeholder = "IP地址" } })
                @Html.ValidationMessageFor(model => model.ip, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.media_port, new { htmlAttributes = new { @class = "form-control", @id = "media_port", placeholder = "媒体端口号" } })
                @Html.ValidationMessageFor(model => model.media_port, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.account, new { htmlAttributes = new { @class = "form-control", @id = "account", placeholder = "账号" } })
                @Html.ValidationMessageFor(model => model.account, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @id = "password", placeholder = "密码" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>

            <br /><br />

            <button type="submit" class="btn btn-default">提交</button>
            <button id="button" type="button" class="btn btn-default">刷新</button>
        </div>
    }*@


<button class="btn btn-default" data-toggle="modal" data-target="#addModal">添加</button>
<br />

<div class="row">
    <table id="deviceTable" data-toggle="table" data-url="/DeviceMana/GetData" data-method="get" data-silent="true" data-cache="false"
           @*data-classes="table-bordered" data-height="400" data-striped="true" data-sortable="true"*@
           data-pagination="true" data-pageSize="20" data-pageList="[10, 25, 50, 100]"
           @*data-search="true"*@ data-show-columns="true" data-show-refresh="true"
           data-detail-view="true" data-detail-view-icon="true" data-detail-view-by-click="false" 
           data-detail-formatter="getdetail">
        <thead>
            <tr>
                @*<th data-field="id">序号</th>*@
                <th data-field="alias">别名</th>
                <th data-field="site">站点</th>
                <th data-field="dev_type">设备类型</th>
                <th data-field="dev_model">设备型号</th>
                <th data-field="uuid">识别编号</th>
                <th data-field="rtsp_url">视频流地址</th>
                <th data-field="ip">IP</th>
                <th data-field="media_port">媒体端口号</th>
                <th data-field="account">账号</th>
                <th data-field="password">密码</th>
                @*<th data-field="alg_config" data-formatter="editFormatter" data-events="operateEvents">算法配置</th>*@
                <th data-field="delete" data-formatter="operateFormatter" data-events="operateEvents">操作</th>
            </tr>
        </thead>
    </table>
</div>


<div class="modal fade" id="editModal" role="dialog" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="editModalLabel">编辑</h4>
            </div>
            @using (Html.BeginForm("UpdateDev", "DeviceMana"))
            {
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-inline">
                        <label>别名</label>
                        <div class="form-group">
                            @Html.EditorFor(model => model.alias, new { htmlAttributes = new { @class = "form-control", @id = "alias2", placeholder = "别名" } })
                            @Html.ValidationMessageFor(model => model.alias, "", new { @class = "text-danger" })
                        </div>

                        <label>站点</label>
                        <div class="form-group">
                            @*<select id="site" class="form-control"></select>*@
                            @Html.DropDownListFor(model => model.site, ViewData["siteList"] as IEnumerable<SelectListItem>, new { @class = "form-control select", @id = "site2" })
                            @Html.ValidationMessageFor(model => model.site, "", new { @class = "text-danger" })
                        </div>

                        <br /><br />

                        <label>设备类型</label>
                        <div class="form-group">
                            @Html.DropDownListFor(model => model.dev_type, ViewData["dev_typeList"] as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "dev_type2" })
                            @Html.ValidationMessageFor(model => model.dev_type, "", new { @class = "text-danger" })
                        </div>

                        <label>设备型号</label>
                        <div class="form-group">
                            @Html.DropDownListFor(model => model.dev_model, ViewData["dev_modelList"] as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "dev_model2" })
                            @Html.ValidationMessageFor(model => model.dev_model, "", new { @class = "text-danger" })
                        </div>

                        <br /><br />


                        <div class="form-group">
                            @Html.EditorFor(model => model.uuid, new { htmlAttributes = new { @class = "form-control", @id = "uuid2", placeholder = "识别编号", @style = "display:none" } })
                            @Html.ValidationMessageFor(model => model.uuid, "", new { @class = "text-danger" })
                        </div>

                        <label>视频流地址</label>
                        <div class="form-group">
                            @Html.EditorFor(model => model.rtsp_url, new { htmlAttributes = new { @class = "form-control", @id = "rtsp_url2", placeholder = "视频流地址" } })
                            @Html.ValidationMessageFor(model => model.rtsp_url, "", new { @class = "text-danger" })
                        </div>

                        <br /><br />

                        <label>IP地址</label>
                        <div class="form-group">
                            @Html.EditorFor(model => model.ip, new { htmlAttributes = new { @class = "form-control", @id = "ip2", placeholder = "IP地址" } })
                            @Html.ValidationMessageFor(model => model.ip, "", new { @class = "text-danger" })
                        </div>

                        <label>媒体端口号</label>
                        <div class="form-group">
                            @Html.EditorFor(model => model.media_port, new { htmlAttributes = new { @class = "form-control", @id = "media_port2", placeholder = "媒体端口号" } })
                            @Html.ValidationMessageFor(model => model.media_port, "", new { @class = "text-danger" })
                        </div>

                        <br /><br />

                        <label>账号</label>
                        <div class="form-group">
                            @Html.EditorFor(model => model.account, new { htmlAttributes = new { @class = "form-control", @id = "account2", placeholder = "账号" } })
                            @Html.ValidationMessageFor(model => model.account, "", new { @class = "text-danger" })
                        </div>

                        <label>密码</label>
                        <div class="form-group">
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @id = "password2", placeholder = "密码" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-default">提交</button>
                </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->




<div class="modal fade" id="addModal" role="dialog" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="addModalLabel">添加设备</h4>
            </div>
            @using (Html.BeginForm("AddDevice", "DeviceMana"))
            {
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-inline">
                        <div class="form-group">
                            @Html.EditorFor(model => model.alias, new { htmlAttributes = new { @class = "form-control", @id = "alias", placeholder = "别名" } })
                            @Html.ValidationMessageFor(model => model.alias, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @*<select id="site" class="form-control"></select>*@
                            @*@Html.DropDownListFor(model => model.site, ViewData["siteList"] as IEnumerable<SelectListItem>, new { @class = "form-control select", @id = "site" })
                                @Html.ValidationMessageFor(model => model.site, "", new { @class = "text-danger" })*@
                            <input type="text" name="site" list="sitename" class="form-control" placeholder="站点">
                            <datalist id="sitename">
                                @foreach (dynamic item in ViewBag.sitename)
                                {
                                    <option value="@item"></option>
                                }
                            </datalist>
                        </div>

                        <div class="form-group">
                            @*@Html.DropDownListFor(model => model.dev_type, ViewData["dev_typeList"] as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "dev_type" })
                                @Html.ValidationMessageFor(model => model.dev_type, "", new { @class = "text-danger" })*@
                            <input type="text" name="dev_type" list="devname" class="form-control" placeholder="设备类型">
                            <datalist id="devname">
                                @foreach (dynamic item in ViewBag.devname)
                                {
                                    <option value="@item"></option>
                                }
                            </datalist>
                        </div>

                        <div class="form-group">
                            @*@Html.DropDownListFor(model => model.dev_model, ViewData["dev_modelList"] as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "dev_model" })
                                @Html.ValidationMessageFor(model => model.dev_model, "", new { @class = "text-danger" })*@
                            <input type="text" name="dev_model" list="devmodelname" class="form-control" placeholder="设备型号">
                            <datalist id="devmodelname">
                                @foreach (dynamic item in ViewBag.devmodelname)
                                {
                                    <option value="@item"></option>
                                }
                            </datalist>
                        </div>

                        <br /><br />

                        <div class="form-group">
                            @Html.EditorFor(model => model.uuid, new { htmlAttributes = new { @class = "form-control", @id = "uuid", placeholder = "识别编号" } })
                            @Html.ValidationMessageFor(model => model.uuid, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.EditorFor(model => model.rtsp_url, new { htmlAttributes = new { @class = "form-control", @id = "rtsp_url", placeholder = "视频流地址" } })
                            @Html.ValidationMessageFor(model => model.rtsp_url, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.EditorFor(model => model.ip, new { htmlAttributes = new { @class = "form-control", @id = "ip", placeholder = "IP地址" } })
                            @Html.ValidationMessageFor(model => model.ip, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.EditorFor(model => model.media_port, new { htmlAttributes = new { @class = "form-control", @id = "media_port", placeholder = "媒体端口号" } })
                            @Html.ValidationMessageFor(model => model.media_port, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.EditorFor(model => model.account, new { htmlAttributes = new { @class = "form-control", @id = "account", placeholder = "账号" } })
                            @Html.ValidationMessageFor(model => model.account, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @id = "password", placeholder = "密码" } })
                            @*@Html.PasswordFor(model => model.password, new { @class = "form-control", @id = "password", placeholder = "密码" })@*用htmlAttributes会显示MVC风格而不是bootstrap风格*@
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="reset" class="btn btn-default">重置</button>
                    <button type="submit" class="btn btn-default">提交</button>
                </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<div class="modal fade" id="editGBModal" role="dialog" tabindex="-1" aria-labelledby="editGBModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="editGBModalLabel">编辑GenBox</h4>
            </div>
            @using (Html.BeginForm("UpdateGB", "DeviceMana"))
            {
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-inline">
                        <label>别名</label>
                        <div class="form-group">
                            @Html.EditorFor(model => model.alias, new { htmlAttributes = new { @class = "form-control", @id = "alias3", placeholder = "别名" } })
                            @Html.ValidationMessageFor(model => model.alias, "", new { @class = "text-danger" })
                        </div>

                        <label>站点</label>
                        <div class="form-group">
                            @*<select id="site" class="form-control"></select>*@
                            @Html.DropDownListFor(model => model.site, ViewData["siteList"] as IEnumerable<SelectListItem>, new { @class = "form-control select", @id = "site3" })
                            @Html.ValidationMessageFor(model => model.site, "", new { @class = "text-danger" })
                        </div>



                        <div class="form-group">
                            @Html.EditorFor(model => model.uuid, new { htmlAttributes = new { @class = "form-control", @id = "uuid3", placeholder = "识别编号", style = "display:none" } })
                            @Html.ValidationMessageFor(model => model.uuid, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.DropDownListFor(model => model.dev_type, ViewData["dev_typeList"] as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "dev_type3", style = "display:none" })
                            @Html.ValidationMessageFor(model => model.dev_type, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.DropDownListFor(model => model.dev_model, ViewData["dev_modelList"] as IEnumerable<SelectListItem>, new { @class = "form-control", @id = "dev_model3", style = "display:none" })
                            @Html.ValidationMessageFor(model => model.dev_model, "", new { @class = "text-danger" })
                        </div>

                        <br /><br />
                        <label>IP地址</label>
                        <div class="form-group">
                            @Html.EditorFor(model => model.ip, new { htmlAttributes = new { @class = "form-control", @id = "ip3", placeholder = "IP地址" } })
                            @Html.ValidationMessageFor(model => model.ip, "", new { @class = "text-danger" })
                        </div>
                        <br /><br />

                        <label>帐号</label>
                        <div class="form-group">
                            @Html.EditorFor(model => model.account, new { htmlAttributes = new { @class = "form-control", @id = "account3", placeholder = "帐号" } })
                            @Html.ValidationMessageFor(model => model.account, "", new { @class = "text-danger" })
                        </div>

                        <label>密码</label>
                        <div class="form-group">
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @id = "password3", placeholder = "密码" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                        <br /><br />


                        <label>配置摄像头</label>
                        <br /><br />

                        <label>cam1</label>
                        <div class="form-group">
                            <input class="form-control" name="cam_uuid1" placeholder="Cam uuid" />
                            <label>算法</label>
                            <select name="algo1" class="form-control">
                                <option value="pfr">pfr</option>
                                <option value="fsd">fsd</option>
                                <option value="opa4t">opa4t</option>
                                <option value="wca">wca</option>
                                <option value="ssc">ssc</option>
                                <option value="ebd">ebd</option>
                            </select>
                            <input class="form-control" name="cpu_num1" placeholder="cpu序号" />
                        </div>

                        <br /><br />

                        <label>cam2</label>
                        <div class="form-group">
                            <input class="form-control" name="cam_uuid2" placeholder="Cam uuid" />
                            <label>算法</label>
                            <select name="algo2" class="form-control">
                                <option value="pfr">pfr</option>
                                <option value="fsd">fsd</option>
                                <option value="opa4t">opa4t</option>
                                <option value="wca">wca</option>
                                <option value="ssc">ssc</option>
                                <option value="ebd">ebd</option>
                            </select>
                            <input class="form-control" name="cpu_num2" placeholder="cpu序号" />
                        </div>

                        <br /><br />

                        <label>cam3</label>
                        <div class="form-group">
                            <input class="form-control" name="cam_uuid3" placeholder="Cam uuid" />
                            <label>算法</label>
                            <select name="algo3" class="form-control">
                                <option value="pfr">pfr</option>
                                <option value="fsd">fsd</option>
                                <option value="opa4t">opa4t</option>
                                <option value="wca">wca</option>
                                <option value="ssc">ssc</option>
                                <option value="ebd">ebd</option>
                            </select>
                            <input class="form-control" name="cpu_num3" placeholder="cpu序号" />
                        </div>

                        <br /><br />

                    </div>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-default">提交</button>
                </div>
            }
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!--
@*<table class="table">
    <tr>
        <th>站点</th>
        <th>设备类型</th>
        <th>设备型号</th>
        <th>别名</th>
        <th>IP</th>
        <th>算法配置</th>
        <th></th>
    </tr>

    @foreach (var item in ViewData["device"] as IEnumerable<GenSys.Models.device>)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.site)</td>
            <td>@Html.DisplayFor(modelItem => item.dev_type)</td>
            <td>@Html.DisplayFor(modelItem => item.dev_model)</td>
            <td>@Html.DisplayFor(modelItem => item.alias)</td>
            <td>@Html.DisplayFor(modelItem => item.ip)</td>
            <td>@Html.ActionLink("Edit", "Edit", new { id = item.id })</td>
            <td>
                <!-- 按钮触发模态框 -->
                <a data-toggle="modal" data-target="#myModal">删除</a>
                <!-- 模态框（Modal） -->
                <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal"
                                        aria-hidden="true">
                                    ×
                                </button>
                                <h4 class="modal-title" id="myModalLabel">
                                    删除设备
                                </h4>
                            </div>
                            <div class="modal-body">
                                <dl class="dl-horizontal">
                                    <dt>序号：</dt>
                                    <dd>@Html.DisplayFor(modelItem => item.id)</dd>
                                    <dt>IP地址：</dt>
                                    <dd>@Html.DisplayFor(modelItem => item.ip)</dd>
                                    <dt>媒体端口：</dt>
                                    <dd>@Html.DisplayFor(modelItem => item.media_port)</dd>
                                    <dt>登录名：</dt>
                                    <dd>@Html.DisplayFor(modelItem => item.username)</dd>
                                    <dt>登录密码：</dt>
                                    <dd>@Html.DisplayFor(modelItem => item.password)</dd>
                                    <dt>类型：</dt>
                                    <dd>@Html.DisplayFor(modelItem => item.dev_type)</dd>
                                    <dt>型号：</dt>
                                    <dd>@Html.DisplayFor(modelItem => item.dev_model)</dd>
                                    <dt>站点：</dt>
                                    <dd>@Html.DisplayFor(modelItem => item.site)</dd>
                                    <dt>别名：</dt>
                                    <dd>@Html.DisplayFor(modelItem => item.alias)</dd>
                                </dl>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                                <input type="button" class="btn btn-warning" value="确认删除" onclick="toDelete( @item.id )" />
                            </div>
                        </div><!-- /.modal-content -->
                    </div><!-- /.modal-dialog -->
                </div><!-- /.modal -->
            </td>
        </tr>
    }
</table>*@
-->
