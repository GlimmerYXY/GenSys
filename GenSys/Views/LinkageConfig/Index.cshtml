@{
    ViewBag.Title = "联动配置";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

@section Scripts {
    <link href="~/Scripts/Bootstrap-Table-1.5.0/bootstrap-table.min.css" rel="stylesheet" />
    <script src="~/Scripts/Bootstrap-Table-1.5.0/bootstrap-table.min.js"></script>
    <script src="~/Scripts/Bootstrap-Table-1.5.0/locale/bootstrap-table-zh-CN.min.js"></script>
    <script src="~/Scripts/Bootstrap-Table-1.5.0/extensions/editable/bootstrap-table-editable.min.js"></script>
    <link href="~/Scripts/bootstrap3-editable-1.5.1/bootstrap-editable.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap3-editable-1.5.1/bootstrap-editable.min.js"></script>

    <script src="~/Scripts/jquery.editable-select/jquery.editable-select.min.js" type="text/javascript"></script>
    <link href="~/Scripts/jquery.editable-select/jquery.editable-select.min.css" rel="stylesheet" type="text/css" />

    <script>
        /*向表格添加一行*/
        let $button = $('#append');
        $button.click(function () {
            $table.bootstrapTable('append', { uuid: '', operation: '', detail: '' });
            $('#detail').editableSelect({
                effects: 'slide',
                //可选参数default、fade
                filter: false // 不过滤，否则选中后其它选项消失
            });
        });
        
        /*构造表格*/
        var $table = $('#table')
        $(function () {
            $table.bootstrapTable({
                data: [],
                columns: [{
                    field: 'uuid',
                    title: '设备序列号',
                    formatter: SelectUuid
                    //editable: {
                    //    type: 'select',
                    //    source: [
                    //        { value: '0', text: 'item0' },
                    //        { value: '1', text: 'item1' },
                    //        { value: '2', text: 'item2' }
                    //    ],
                    //    title: "选择设备序列号",     //编辑框的标题
                    //    disabled: false,           //是否禁用编辑
                    //    emptytext: "空文本",       //空值的默认文本
                    //    mode: "inline",            //编辑框的模式：支持popup和inline两种模式，默认是popup
                    //    showbuttons: false,
                    //    validate: function (value) { //字段验证
                    //        if (!$.trim(value)) {
                    //            return '不能为空';
                    //        }
                    //    }
                    //}
                }, {
                    field: 'operation',
                    title: '操作类型',
                    formatter: SelectOperation
                    //editable: {
                    //    type: 'select',
                    //    source: [
                    //        { value: '3', text: 'item3' },
                    //        { value: '4', text: 'item4' },
                    //        { value: '5', text: 'item5' }
                    //    ],
                    //    title: "选择操作类型",     //编辑框的标题
                    //    disabled: false,           //是否禁用编辑
                    //    emptytext: "空文本",       //空值的默认文本
                    //    mode: "inline",            //编辑框的模式：支持popup和inline两种模式，默认是popup
                    //    showbuttons: false,
                    //    validate: function (value) { //字段验证
                    //        if (!$.trim(value)) {
                    //            return '不能为空';
                    //        }
                    //    }
                    //}
                }, {
                    field: 'detail',
                    title: '操作参数',
                    formatter: SelectDetail
                    //editable: {
                    //    type: 'text',
                    //    title: '年龄',
                    //    disabled: false,              //是否禁用编辑
                    //    emptytext: "空文本",          //空值的默认文本
                    //    mode: "inline",               //编辑框的模式：支持popup和inline两种模式，默认是popup
                    //    validate: function (value) {
                    //        if (!$.trim(value)) return '不能为空';
                    //        if (isNaN(value)) return '年龄必须是数字';
                    //        var age = parseInt(value);
                    //        if (age <= 0) return '年龄必须是正数';
                    //    }
                    //}
                }],
                //onClickCell: function (field, value, row, $element) {
                //    $element.attr('contenteditable', true);
                //    $element.blur(function () {
                //        let index = $element.parent().data('index');
                //        let tdValue = $element.html();

                //        SaveData(index, field, tdValue);
                //    })
                //}
            })
        })

        //function SaveData(index, field, value) {
        //    $table.bootstrapTable('updateCell', {
        //        index: index,       //行索引
        //        field: field,       //列名
        //        value: value        //cell值
        //    })
        //}

        function SelectUuid(value, row, index) {
            return "<select id='uuid' class='form-control'><option value='1'>item1</option><option value='2'>item2</option></select>";
        }
        function SelectOperation(value, row, index) {
            ready = true;
            return "<select id='operation' class='form-control'><option value='1'>item1</option><option value='2'>item2</option></select>";
        }
        function SelectDetail(value, row, index) {
            return "<select id='detail' class='form-control'><option value='1'>item1</option><option value='2'>item2</option></select>";
        }
        
        /*封装表格，提交表单*/
        //$('#btnSubmit').click(function () {
        //    var tableData = GetTableData();
        //    console.log("before: " + $('#hidTD').val())
        //    $('#hidTD').val(JSON.stringify(tableData));
        //    console.log("after: " + $('#hidTD').val())
        //    $('#form').submit();
        //});

        /*封装表格，提交表单*/
        function SubmitMe() {
            //alert("hahaha");
            var tableData = GetTableData();
            console.log("before: " + $('#hidTD').val())
            $('#hidTD').val(JSON.stringify(tableData));
            console.log("after: " + $('#hidTD').val())
        }

        function GetTableData() {
            var tr = $('#table tr');
            var result = [];
            for (i = 0; i < tr.length; i++) {
                var tds = $(tr[i]).find('td');
                if (tds.length > 0) {
                    result.push({ 'uuid': $(tds[0]).find('a').html(), 'operation': $(tds[1]).find('a').html(), 'detail': $(tds[2]).find('a').html() })
                }
            }
            //console.log(result);
            return result;
        }
    </script>
}


@using (Html.BeginForm("Generate", "LinkageConfig", FormMethod.Post, htmlAttributes: new { id = "form", onsubmit = "SubmitMe()" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group form-inline">
        @Html.Label("周内设定")
        <br />
        <div class="form-group">
            @Html.Label("周一", htmlAttributes: new { @class = "control-label" })
            @Html.CheckBox("Mon")
        </div>
        <div class="form-group">
            @Html.Label("周二", htmlAttributes: new { @class = "control-label" })
            @Html.CheckBox("Tues")
        </div>
        <div class="form-group">
            @Html.Label("周三", htmlAttributes: new { @class = "control-label" })
            @Html.CheckBox("Wed")
        </div>
        <div class="form-group">
            @Html.Label("周四", htmlAttributes: new { @class = "control-label" })
            @Html.CheckBox("Thur")
        </div>
        <div class="form-group">
            @Html.Label("周五", htmlAttributes: new { @class = "control-label" })
            @Html.CheckBox("Fri")
        </div>
        <div class="form-group">
            @Html.Label("周六", htmlAttributes: new { @class = "control-label" })
            @Html.CheckBox("Sat")
        </div>
        <div class="form-group">
            @Html.Label("周日", htmlAttributes: new { @class = "control-label" })
            @Html.CheckBox("Sun")
        </div>
    </div>

    <div class="form-group">
        @Html.Label("触发事件", htmlAttributes: new { @class = "control-label" })
        @Html.DropDownList("event", ViewData["event"] as IEnumerable<SelectListItem>, new { @class = "form-control select", @id = "event" })
    </div>

    <div class="form-group">
        @Html.Label("延时执行", htmlAttributes: new { @class = "control-label" })
        @Html.Editor("delay", new { htmlAttributes = new { @class = "form-control", @id = "delay", placeholder = "单位：秒" } })
    </div>

    <div class="form-group">
        <button id="append" type="button" class="btn btn-default">添加命令</button>
        <table id="table"></table>
    </div>

    <div>
        <input id="hidTD" type="hidden" name="table_data" value="" />
        <button id="btnSubmit" type="submit" class="btn btn-default">提交</button>
    </div>
}

@*<datalist id="url_list">
    <option label="HZ赫兹工作室" value="http://weibo.com/hz421247910" />
    <option label="提示1" value="列表项1" />
    <option label="提示2" value="列表项2" />
    <option label="" value="列表项3" />
</datalist>

<input type="text" name="dayLimit" style="width:45px;POSITION: absolute">
<select id="choose"
        onchange="document.all['dayLimit'].value=this.options[this.selectedIndex].value"
        style="width:62px; clip: rect(auto auto auto 45px); position: absolute">
    <option value=""></option>
    <option value="5">5</option>
    <option value="10">10</option>
    <option value="15">15</option>
</select>*@